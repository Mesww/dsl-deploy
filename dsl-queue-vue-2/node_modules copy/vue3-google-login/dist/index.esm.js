import{reactive as e,watch as t,defineComponent as i,useSlots as n,ref as o,onMounted as c,openBlock as l,createElementBlock as a,unref as r,createCommentVNode as d,renderSlot as p}from"vue";var u=Object.freeze({__proto__:null});var s={library:"https://accounts.google.com/gsi/client",defaultButtonConfig:{theme:"outline",size:"large"},scopes:"email profile openid"};const g=e({clientId:null,popupType:"CODE",prompt:!1,autoLogin:!1,idConfiguration:null,buttonConfig:s.defaultButtonConfig,callback:()=>{},error:null}),f=e({apiLoaded:!1,apiLoadIntitited:!1}),b=e=>{try{const t=e.split(".")[1].replace(/-/g,"+").replace(/_/g,"/"),i=decodeURIComponent(atob(t).split("").map((function(e){return"%"+("00"+e.charCodeAt(0).toString(16)).slice(-2)})).join(""));return JSON.parse(i)}catch(e){throw"JWT provided is invalid"}},I=new Promise((e=>{const t="undefined"!=typeof window;if(!f.apiLoadIntitited&&t){const t=document.createElement("script");f.apiLoadIntitited=!0,t.addEventListener("load",(()=>{f.apiLoaded=!0,e(window.google)})),t.src=s.library,t.async=!0,t.defer=!0,document.head.appendChild(t)}})),m=e=>{f.apiLoadIntitited?f.apiLoaded?e(window.google):t((()=>f.apiLoaded),(t=>{t&&e(window.google)})):I.then((t=>{e(t)}))},w=(e,t,i,n)=>{if(!e.client_id)throw new Error("Prop client id required since plugin is not initialized with a client id");m((()=>{((e,t,i,n,o)=>{if(o){const t=e.callback;e.callback=e=>{e.credential?t&&t(e):o(e)}}window.google.accounts.id.initialize(e);const c=t.value;c&&!n&&window.google.accounts.id.renderButton(c,i)})(e,t,i.buttonConfig,n,i.error),i.prompt&&k({clientId:i.clientId,callback:i.callback,error:i.error,autoLogin:i.autoLogin})}))},_=e=>new Promise(((t,i)=>{m((n=>{if(!(e&&e.clientId||g.clientId))throw new Error("clientId is required since the plugin is not initialized with a Client Id");n.accounts.oauth2.initCodeClient({client_id:e&&e.clientId||g.clientId||"",scope:s.scopes,ux_mode:"popup",callback:e=>{e.code?t(e):i(e)},error_callback:e=>{i(e)}}).requestCode()}))})),h=e=>new Promise(((t,i)=>{m((n=>{if(!(e&&e.clientId||g.clientId))throw new Error("clientId is required since the plugin is not initialized with a Client Id");n.accounts.oauth2.initTokenClient({client_id:e&&e.clientId||g.clientId||"",scope:s.scopes,callback:e=>{e.access_token?t(e):i(e)},error_callback:e=>{i(e)}}).requestAccessToken()}))})),k=e=>{if(!e&&(e={}),!e.clientId&&!g.clientId)throw new Error("clientId is required");const t={use_fedcm_for_prompt:!0};return e.clientId&&(t.client_id=e.clientId),!e.clientId&&g.clientId&&(t.client_id=g.clientId),e.context&&(t.context=e.context),null!=e.autoLogin&&(t.auto_select=e.autoLogin),null!=e.cancelOnTapOutside&&(t.cancel_on_tap_outside=e.cancelOnTapOutside),new Promise(((i,n)=>{t.callback=t=>{e&&e.callback&&e.callback(t),t.credential?i(t):n(t)},m((e=>{e.accounts.id.initialize(t),e.accounts.id.prompt()}))}))},y=()=>{m((e=>{e.accounts.id.disableAutoSelect()}))};var C=i({__name:"GoogleLogin",props:{clientId:{type:String,required:!1},prompt:{type:Boolean,required:!1,default:!1},autoLogin:{type:Boolean,required:!1,default:!1},popupType:{type:String,required:!1},idConfiguration:{type:Object,required:!1},buttonConfig:{type:Object,required:!1},callback:{type:Function,required:!1},error:{type:Function,required:!1}},setup(e){const t=!!n().default,i=e,u=((e,t)=>{const i={...e};for(const e in t)void 0!==t[e]&&null!==t[e]&&(i[e]=t[e]);return i})(g,i),s={client_id:u.clientId||null,auto_select:u.autoLogin||!1,callback:u.callback,...u.idConfiguration},f=o();return c((()=>{w(s,f,u,t),i.popupType&&!t&&console.warn("Option 'popupType' is ignored since a slot which act as a custom login button was not found!!!")})),(e,i)=>(l(),a("div",{class:"g-btn-wrapper",onClick:i[0]||(i[0]=e=>r(t)&&void("TOKEN"===r(u).popupType?h({clientId:u.clientId}).then((e=>{u.callback&&u.callback(e)})).catch((e=>{u.error&&u.error(e)})):_({clientId:u.clientId}).then((e=>{u.callback&&u.callback(e)})).catch((e=>{u.error&&u.error(e)}))))},[r(t)?d("v-if",!0):(l(),a("span",{key:0,ref_key:"buttonRef",ref:f,class:"g-btn"},null,512)),p(e.$slots,"default")]))}});!function(e,t){void 0===t&&(t={});var i=t.insertAt;if(e&&"undefined"!=typeof document){var n=document.head||document.getElementsByTagName("head")[0],o=document.createElement("style");o.type="text/css","top"===i&&n.firstChild?n.insertBefore(o,n.firstChild):n.appendChild(o),o.styleSheet?o.styleSheet.cssText=e:o.appendChild(document.createTextNode(e))}}("\n.g-btn-wrapper[data-v-5e610566] {\n  display: inline-block;\n}\n"),C.__scopeId="data-v-5e610566",C.__file="src/plugin/GoogleLogin.vue";var L={install:(e,t)=>{t&&(e=>{e.clientId&&(g.clientId=e.clientId),e.popupType&&(g.popupType=e.popupType),null!=e.prompt&&(g.prompt=e.prompt),null!=e.autoLogin&&(g.autoLogin=e.autoLogin),e.idConfiguration&&(g.idConfiguration=e.idConfiguration),e.buttonConfig&&(g.buttonConfig=e.buttonConfig),e.callback&&(g.callback=e.callback)})(t),I.then((()=>{if(t.clientId){const e={client_id:t.clientId,auto_select:!0===t.autoLogin,callback:t.callback,use_fedcm_for_prompt:!0,...t.idConfiguration};window.google.accounts.id.initialize(e),t.prompt&&window.google.accounts.id.prompt()}})),e.component("GoogleLogin",C)}};export{u as CallbackTypes,C as GoogleLogin,b as decodeCredential,L as default,_ as googleAuthCodeLogin,y as googleLogout,k as googleOneTap,m as googleSdkLoaded,h as googleTokenLogin};
