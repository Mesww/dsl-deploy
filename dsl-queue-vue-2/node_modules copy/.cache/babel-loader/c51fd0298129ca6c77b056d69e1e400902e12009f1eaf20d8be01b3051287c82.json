{"ast":null,"code":"export default {};","map":{"version":3,"names":[],"sources":["/home/worawut_kni/Work/dsl-queue-vue-2/src/pages/student/satisfaction.vue"],"sourcesContent":["<script>\nexport default {\n    \n}\n</script>\n\n<template>\n    <div class=\"bg\">\n      <IncStudentsHeadersatis />\n          <div class=\"raiting flex flex-col justify-center items-center\">\n              <div\n                class=\"flex justify-center\"\n                v-for=\"(question, index) in selectedValue\"\n                :key=\"index\"\n              >\n                <div class=\" rounded-md bg-white box mt-5 p-5 d-flex \">\n                  <div>\n                    <p>{{ index + 1 }}. {{ question.Question }}</p>\n                    <div class=\"flex justify-between \">\n                      <URange\n                        class=\"range\"\n                        color=\"red\"\n                        :min=\"1\"\n                        :max=\"5\"\n                        v-model=\"selectedValue[index].value\"\n                      />\n                      <p>{{ selectedValue[index].value }}</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n          <div class=\"flex justify-center my-5 \">\n          <UButton\n              :ui=\"{ rounded: 'rounded-full' }\"\n              class=\"submitButton\"\n              icon=\"i-heroicons-arrow-right-circle-16-solid\"\n              @click=\"submit\"\n              >Submit</UButton\n            >\n          </div>\n  \n      </div>\n  \n    </div>\n  </template>\n  \n<!-- <script lang=\"ts\" setup>\n  import Swal from \"sweetalert2\";\n  import \"animate.css\";\n  \n  console.log(userid.value);\n  const {data:user} = await useFetch(`/api/user/user?userid=${userid.value}`);\n  console.log(user.value);\n  \n  \n  const studentID = user.value?.studentid;\n  const { data: myqueues, pending } = await useLazyAsyncData<{\n    queueid: number;\n    datetime: string;\n    studentID: string;\n    type: string;\n    orders: number;\n    channel: string;\n    status: string;\n    rate: number;\n    comment: string;\n  }>(\n    \"queue\",\n    () =>\n      $fetch(\"/api/queue/queueDataspecific\", {\n        method: \"post\",\n        body: {\n          studentID: studentID,\n        },\n      })\n  \n  );\n  \n  let selectedValue = ref([\n    { Question: \"โปรดให้คะแนนความพึงพอใจการให้บริการ\", value: 0 },\n  ]);\n  // console.log(value.model-value);\n  // import { IncStudentsRatingform } from '#build/components';\n  async function submit() {\n    // console.log('test');\n    console.log(selectedValue.value);\n    await Swal.fire({\n      icon: \"success\",\n      title: \"ขอบคุณที่มาใช้บริการ\",\n      showConfirmButton: false,\n      timer: 1500,\n      timerProgressBar: true,\n    })\n    await createHistory();\n    const res = await $fetch('/api/queue/queueDelete',{\n        method:\"DELETE\",\n        body:{\n          queueid: parseInt(myqueueid.value)\n        }\n      });\n      if (res === \"Delete!\") {\n        myqueueid.value = null;\n        is_reserve.value = null;\n        navigateTo(\"/student/\", { replace: true });\n      }\n  }\n  \n  async function createHistory() {\n    console.log(userid.value + myqueues.value.type + myqueues.value.rate + myqueues.value.comment + myqueues.value.channel);\n    try {\n      const response = await $fetch(\"/api/history/historyCreate\", {\n        method: \"post\",\n        body: { type: myqueues.value.type, studentid:myqueues.value.studentID, rate: myqueues.value.rate, comment: myqueues.value.comment, channel: myqueues.value.channel },\n      });\n      console.log(response);\n      if (response !== null ) {\n        console.log(response);\n        console.log(\"CREATED\");\n        // setData(\"is_reserve\", true);\n        // const queueid = useCookie('myqueueid');\n        // queueid.value = response.queueid;\n        // is_reserve.value = true;\n        // navigateTo(\"/student/main\", { replace: true });\n      } else {\n        throw Error(\"Connection error\");\n      }\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n  </script> -->\n  \n  <style lang=\"scss\" scoped>\n  .bg {\n    background-color: #191771;\n    height: 100vh;\n    overflow: scroll;\n  \n  }\n  .submitButton {\n    background-color: #f1f5f9;\n    color: #191771;\n    display: flex;\n    justify-content: center;\n    width: 80vw;\n  }\n  .submitButton:hover {\n    background-color: #ed1c24;\n    color: #f1f5f9;\n    overflow: hidden;\n  }\n  \n  .box {\n    width: 80vw;\n    color: #191771;\n    border-radius: 1.5rem;\n    .range {\n      margin-top: auto;\n      margin-bottom: auto;\n      width: 60vw;\n    }\n  }\n  </style>\n  "],"mappings":"AACA,eAAe,CAEf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}