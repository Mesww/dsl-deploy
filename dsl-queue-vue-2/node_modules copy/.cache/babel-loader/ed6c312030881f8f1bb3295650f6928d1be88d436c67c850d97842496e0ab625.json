{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"appindex\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"flex justify-end mb-2\"\n}, [/*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"text-red-600 mr-4\"\n}, \"กดเพื่อพักระบบ\"), /*#__PURE__*/_createCommentVNode(\" <UToggle\\n              size=\\\"xl\\\"\\n              color=\\\"primary\\\"\\n              v-model=\\\"selected\\\"\\n              @update:model-value=\\\"breakAlert\\\"\\n            /> \")], -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"form-btn\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"flex justify-end px-3 py-3.5 border-t border-gray-200 dark:border-gray-700\"\n}, null, -1 /* HOISTED */);\nexport function render(_ctx, _cache) {\n  const _component_v_data_table_server = _resolveComponent(\"v-data-table-server\");\n  const _component_NuxtLayout = _resolveComponent(\"NuxtLayout\");\n  return _openBlock(), _createBlock(_component_NuxtLayout, {\n    name: \"teacher\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" <IncTeacherSidebar /> \"), _createElementVNode(\"main\", null, [_hoisted_2, _createCommentVNode(\" refresh \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n      type: \"button\",\n      id: \"btn-refresh\",\n      class: \"btn btn-outline-danger btn-sm\",\n      onClick: _cache[0] || (_cache[0] = $event => _ctx.refreshData())\n    }, \"Refresh\")]), _createVNode(_component_v_data_table_server), _createCommentVNode(\" ตารางข้อมูล \"), _createCommentVNode(\" <UTable \\n            v-if=\\\"queueconvert.length > 0 && queueconvert !== null \\\"\\n            :rows=\\\"queueconvert\\\"\\n            :columns=\\\"column\\\"\\n            class=\\\"queue-table\\\"\\n          >\\n            <template #actions-data=\\\"{ row }\\\">\\n              <div class=\\\"form-btn\\\">\\n                <button id=\\\"btn1\\\" @click=\\\"callAction(row)\\\">เรียก</button>\\n                <button id=\\\"btn2\\\" @click=\\\"skipAction(row)\\\">ข้าม</button>\\n                <button id=\\\"btn3\\\" @click=\\\"completeAction(row)\\\">เสร็จสิ้น</button>\\n              </div>\\n            </template>\\n          </UTable>\\n          เช็คว่ามีข้อมูลไหม \"), _createCommentVNode(\" <div v-else>\\n            <UTable\\n              loading\\n              :loading-state=\\\"{\\n                icon: 'i-heroicons-arrow-path-20-solid',\\n                label: 'ขอบคุณที่ทำงานหนักเพื่อพวกเรา',\\n              }\\\"\\n              :progress=\\\"{ color: 'primary', animation: 'carousel' }\\\"\\n              class=\\\"queue-table\\\"\\n              :columns=\\\"column\\\"\\n            />\\n          </div> \"), _hoisted_4])])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["class","_createElementVNode","_createCommentVNode","_createBlock","_component_NuxtLayout","name","default","_withCtx","_hoisted_1","_hoisted_2","_hoisted_3","type","id","onClick","_cache","$event","_ctx","refreshData","_createVNode","_component_v_data_table_server","_hoisted_4","_"],"sources":["/home/worawut_kni/Work/dsl-queue-vue-2/src/pages/teacher/index.vue"],"sourcesContent":["<template lang=\"\">\n    <NuxtLayout name=\"teacher\">\n      <div class=\"appindex\">\n        <!-- <IncTeacherSidebar /> -->\n        <main>\n          <div class=\"flex justify-end mb-2\">\n            <p class=\"text-red-600 mr-4\">กดเพื่อพักระบบ</p>\n            <!-- <UToggle\n              size=\"xl\"\n              color=\"primary\"\n              v-model=\"selected\"\n              @update:model-value=\"breakAlert\"\n            /> -->\n          </div>\n  \n          <!-- refresh -->\n          <div class=\"form-btn\">\n            <button type=\"button\" id=\"btn-refresh\"  class=\"btn btn-outline-danger btn-sm\" @click=\"refreshData()\">Refresh</button>\n              </div>\n\n            <v-data-table-server />\n          <!-- ตารางข้อมูล -->\n          <!-- <UTable \n            v-if=\"queueconvert.length > 0 && queueconvert !== null \"\n            :rows=\"queueconvert\"\n            :columns=\"column\"\n            class=\"queue-table\"\n          >\n            <template #actions-data=\"{ row }\">\n              <div class=\"form-btn\">\n                <button id=\"btn1\" @click=\"callAction(row)\">เรียก</button>\n                <button id=\"btn2\" @click=\"skipAction(row)\">ข้าม</button>\n                <button id=\"btn3\" @click=\"completeAction(row)\">เสร็จสิ้น</button>\n              </div>\n            </template>\n          </UTable>\n          เช็คว่ามีข้อมูลไหม -->\n          <!-- <div v-else>\n            <UTable\n              loading\n              :loading-state=\"{\n                icon: 'i-heroicons-arrow-path-20-solid',\n                label: 'ขอบคุณที่ทำงานหนักเพื่อพวกเรา',\n              }\"\n              :progress=\"{ color: 'primary', animation: 'carousel' }\"\n              class=\"queue-table\"\n              :columns=\"column\"\n            />\n          </div> -->\n          <div\n            class=\"flex justify-end px-3 py-3.5 border-t border-gray-200 dark:border-gray-700\"\n          ></div>\n        </main>\n      </div>\n    </NuxtLayout>\n  </template>\n\n<script lang=\"ts\" se>\n\n</script>\n<!-- <script lang=\"ts\" setup>\n  import { useIntervalFn } from \"@vueuse/core\";\n  import { ref } from \"vue\";\n  import Swal from \"sweetalert2\";\n  import \"animate.css\";\n  import { Result, comment } from \"postcss\";\n  import { Channel, QueueStatus, type QueueType } from \"@prisma/client\";\n  import { string, x } from \"joi\";\n  \n  \n  interface QueueData {\n    queueid: number;\n    datetime: string;\n    studentID: string;\n    type: string;\n    orders: number;\n    channel: string;\n    status: string;\n    rate: number;\n    comment: string;\n  }\n  // refresh data \n  async function refreshData() {\n    console.log('Refreshing data...');\n    await refreshNuxtData(\"queueconvert\");\n  }\n  \n  \n  \n  \n  \n  // config to admin channel later\n  let myChannel = \"ONE\";\n  \n  let selected = ref(true);\n  const column = ref([\n    { key: \"queueid\", label: \"ลำดับ\" },\n    { key: \"datetime\", label: \"วันเวลา\" },\n    { key: \"type\", label: \"งานบริการ\" },\n    { key: \"studentID\", label: \"รหัสนักศึกษา\" },\n    { key: \"channel\", label: \"ช่องบริการ\" },\n    { key: \"actions\", label: \"งานบริการ\" },\n  ]);\n  \n  \n  function convertChannel(data: string) {\n    switch (data) {\n      case \"WAIT\":\n        data = \"ยังไม่ได้เรียก\";\n        break;\n      case \"ONE\":\n        data = \"1\";\n        break;\n      case \"TWO\":\n        data = \"2\";\n        break;\n      case \"THREE\":\n        data = \"3\";\n        break;\n      default:\n        break;\n    }\n    return data;\n  }\n  function convertType(type: string): string {\n    switch (type) {\n      case \"ONE\":\n        return \"กยศ. (ลักษณะที่ 1)\";\n      case \"TWO\":\n        return \"กยศ. (ลักษณะที่ 2)\";\n      default:\n        return \"กยศ. (อื่นๆ)\";\n    }\n  }\n  \n  const { data: queueconvert, pending } = await useLazyAsyncData<{\n    queueid: number,\n        datetime: string,\n        studentID: string,\n        type: string,\n        channel: string,\n        status: string,\n        rate: number,\n        comment:string\n  }[]>(\n    \"queueconvert\",\n    () => ($fetch as any)(`/api/queue/queueDataspecificstatusrefuse?queueStatus1=FINISH&queueStatus2=SKIP`)\n    // () => ($fetch as any)(`https://jsonplaceholder.typicode.com/todos`)\n  );\n  \n  const { pause, resume, isActive } = useIntervalFn(async () => {\n    await refreshData();\n  },10000)\n  \n  // console.log(queueconvert.value?.length);\n  console.log(\"test: \");\n  console.log(queueconvert.value);\n  \n  \n  async function breakAlert() {\n    const result = await Swal.fire({\n      title: \"คุณแน่ใจใช่ไหม?\",\n      text: \"คุณกำลังจะพักระบบ!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#191771\",\n      cancelButtonColor: \"#ED1C24\",\n      confirmButtonText: \"ยืนยัน!\",\n      cancelButtonText: \"ยกเลิก\",\n      iconColor: \"#ED1C24\",\n      color: \"#191771\",\n    });\n  \n    if (result.isConfirmed) {\n      // selected = !selected;\n  \n  \n      //Change Status WAIT to STOP\n      await useLazyAsyncData<{\n   \n  }[]>(\n    \"queue_stop\",\n    () => ($fetch as any)(`/api/queue/queueUpdateAll`,\n    {  method: \"put\",\n      body: {\n        changeStatus: \"WAIT\",\n        status: \"STOP\",\n      },\n    })\n    // () => ($fetch as any)(`https://jsonplaceholder.typicode.com/todos`)\n  );\n  \n     \n      Swal.fire({\n        title: \"กำลังพักระบบ!\",\n        html: '<div class=\"spin-loader\"></div>',\n        showCancelButton: true,\n        showConfirmButton: false,\n        allowOutsideClick: false, // Prevent dismissing by clicking outside the modal\n        allowEscapeKey: false, // Prevent dismissing by pressing the Escape key\n        allowEnterKey: false, // Prevent dismissing by pressing the Enter key\n        customClass: {\n          htmlContainer: \"spin-swal-container\",\n        },\n        showClass: {\n          popup: `\n        animate__animated\n        animate__fadeInDown\n        animate__faster\n      `,\n        },\n        hideClass: {\n          popup: `\n        animate__animated\n        animate__fadeOutUp\n        animate__faster\n      `,\n        },\n        cancelButtonText: \"ยกเลิก\",\n        cancelButtonColor: \"#ED1C24\",\n        color: \"#191771\",\n      }).then(async (result) =>  {\n        /* Read more about handling dismissals below */\n        if (result.dismiss || result.isDenied) {\n          // console.log(\"I was closed by the timer\");\n          selected.value = true;\n  \n          //Change Status STOP to WAIT\n  await useLazyAsyncData<{\n   \n  }[]>(\n    \"queue_stop\",\n    () => ($fetch as any)(`/api/queue/queueUpdateAll`,\n    {  method: \"put\",\n      body: {\n        changeStatus: \"STOP\",\n        status: \"WAIT\",\n      },\n    })\n    // () => ($fetch as any)(`https://jsonplaceholder.typicode.com/todos`)\n  );\n  \n        }\n      });\n    } else {\n      selected.value = true;\n    }\n  }\n  async function callAction(row: { queueid: number }) {\n    console.log(row.queueid);\n    console.log(myChannel);\n  \n    const res = await $fetch(\"/api/queue/queueUpdatechannel\", {\n      method: \"put\",\n      body: {\n        queueid: row.queueid,\n        channel: myChannel,\n      },\n    });\n    // console.log(response);\n    if (res === \"All good\") {\n      // find index qeueus\n      const updatedItemIndex = queueconvert.value?.findIndex(\n    (data) => data.queueid === row.queueid\n  ) ?? -1;\n      console.log(\"success\");\n      if (queueconvert.value && updatedItemIndex !== -1) {\n        queueconvert.value[updatedItemIndex].channel = convertChannel(myChannel);\n        console.log(queueconvert.value);\n        console.log(\"success\");\n      }\n    }\n  }\n  \n  async function skipAction(row: { queueid: number }) {\n    console.log(row);\n    const res = await $fetch(\"/api/queue/queueUpdatestatus\", {\n      method: \"put\",\n      body: { queueid: row.queueid, status: \"SKIP\" },\n    });\n    if (res === \"All good\") {\n  \n      console.log(\"put OK\");\n      await refreshNuxtData('queueconvert');\n    }\n  }\n  async function completeAction(row: { queueid: number }) {\n    console.log(row);\n    const res = await $fetch(\"/api/queue/queueUpdatestatus\", {\n      method: \"put\",\n      body: { queueid: row.queueid, status: \"FINISH\" },\n    });\n    if (res === \"All good\") {\n  \n      console.log(\"put OK\");\n      await refreshNuxtData('queueconvert');\n    }\n  }\n  \n  \n</script> -->\n  <style lang=\"scss\">\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: \"Fira sans\", sans-serif;\n  }\n  \n  .appindex {\n    display: flex;\n  \n    main {\n      flex: 1 1 0;\n      padding: 2rem;\n  \n      @media (max-width: 1024px) {\n        padding-left: 6rem;\n      }\n    }\n  }\n  \n  .swal2-container .swal2-html-container {\n    margin-left: auto;\n    margin-right: auto;\n    overflow: visible;\n  }\n  .spin-swal-container {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  \n  .spin-loader {\n    border: 8px solid #f3f3f3; /* Light grey */\n    border-top: 8px solid #191771; /* Blue */\n    border-radius: 50%;\n    width: 50px;\n    height: 50px;\n    animation: spins 1s linear infinite;\n  }\n  \n  @keyframes spins {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n  \n  #text {\n    color: #fff;\n    font-weight: bold;\n    position: absolute;\n    top: 75px;\n    right: 0;\n    margin-right: 140px;\n  }\n  \n  .button-box {\n    width: 220px;\n    margin: 35px auto;\n    position: relative;\n    border-radius: 30px;\n    background: #ed1c24;\n    margin-right: 10px;\n  }\n  \n  .toggle-btn {\n    padding: 10px 40px;\n    cursor: pointer;\n    background: transparent;\n    border: 0;\n    outline: none;\n    position: relative;\n    text-align: center;\n    color: #191771;\n    font-weight: bold;\n  }\n  \n  #btn {\n    left: 0;\n    top: 0;\n    position: absolute;\n    width: 110px;\n    height: 100%;\n    background: #fff;\n    border-radius: 30px;\n    transition: 0.5s;\n  }\n  /* ON OFF */\n  \n  /* table */\n  .queue-table {\n    box-shadow: 0 4px 8px #4175df; /* Add box shadow */\n    // border-collapse: collapse;\n    background-color: #f1f5f9;\n    color: #000;\n    height: 35rem;\n    overflow-y: scroll;\n    thead {\n      background-color: #f1f5f9;\n      th {\n        color: #191771;\n      }\n    }\n    td, th {\n      text-align: center;\n      color: #000000;\n      \n    }\n    tbody {\n      background-color: #f1f5f9;\n      td {\n        color: #191771;\n      }\n    }\n    tbody :hover {\n      background-color: #4175df;\n      td {\n        color: #f1f5f9;\n      }\n    }\n  }\n  #btn1 {\n    background-color: #191771;\n    border-radius: 10px;\n    width: 23%;\n    height: 2rem;\n    margin-right: 1rem;\n    color: white;\n  }\n  \n  #btn2 {\n    background-color: #ed1c24;\n    border-radius: 10px;\n    width: 23%;\n    height: 2rem;\n    margin-right: 1rem;\n    color: white;\n  }\n  \n  #btn3 {\n    background-color: #00a66c;\n    border-radius: 10px;\n    width: 23%;\n    height: 2rem;\n    color: white;\n  }\n  </style>\n  "],"mappings":";;EAEWA,KAAK,EAAC;AAAU;gCAGjBC,mBAAA,CAQM;EARDD,KAAK,EAAC;AAAuB,I,aAChCC,mBAAA,CAA+C;EAA5CD,KAAK,EAAC;AAAmB,GAAC,gBAAc,G,aAC3CE,mBAAA,gLAKM,C;;EAIHF,KAAK,EAAC;AAAU;gCAiCrBC,mBAAA,CAEO;EADLD,KAAK,EAAC;AAA4E;;;;uBAjD1FG,YAAA,CAqDaC,qBAAA;IArDDC,IAAI,EAAC;EAAS;IAD9BC,OAAA,EAAAC,QAAA,CAEM,MAmDM,CAnDNN,mBAAA,CAmDM,OAnDNO,UAmDM,GAlDJN,mBAAA,2BAA8B,EAC9BD,mBAAA,CAgDO,eA/CLQ,UAQM,EAENP,mBAAA,aAAgB,EAChBD,mBAAA,CAEU,OAFVS,UAEU,GADRT,mBAAA,CAAqH;MAA7GU,IAAI,EAAC,QAAQ;MAACC,EAAE,EAAC,aAAa;MAAEZ,KAAK,EAAC,+BAA+B;MAAEa,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,WAAW;OAAI,SAAO,E,GAG5GC,YAAA,CAAuBC,8BAAA,GACzBjB,mBAAA,iBAAoB,EACpBA,mBAAA,2nBAcsB,EACtBA,mBAAA,yZAWU,EACVkB,UAEO,C;IAnDjBC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}