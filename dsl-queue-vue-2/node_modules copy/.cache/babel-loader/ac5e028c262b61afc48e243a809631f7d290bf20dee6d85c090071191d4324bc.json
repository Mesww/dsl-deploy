{"ast":null,"code":"import _defineProperty from \"/home/worawut_kni/Work/dsl-queue-vue-2/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { constructFrom } from \"../../../constructFrom.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.mjs\";\nimport { timezonePatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseTimezonePattern } from \"../utils.mjs\";\n\n// Timezone (ISO-8601)\nexport class ISOTimezoneParser extends Parser {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"priority\", 10);\n    _defineProperty(this, \"incompatibleTokens\", [\"t\", \"T\", \"X\"]);\n  }\n  parse(dateString, token) {\n    switch (token) {\n      case \"x\":\n        return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, dateString);\n      case \"xx\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"xxxx\":\n        return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, dateString);\n      case \"xxxxx\":\n        return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, dateString);\n      case \"xxx\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(date, date.getTime() - getTimezoneOffsetInMilliseconds(date) - value);\n  }\n}","map":{"version":3,"names":["constructFrom","getTimezoneOffsetInMilliseconds","timezonePatterns","Parser","parseTimezonePattern","ISOTimezoneParser","constructor","args","_defineProperty","parse","dateString","token","basicOptionalMinutes","basic","basicOptionalSeconds","extendedOptionalSeconds","extended","set","date","flags","value","timestampIsSet","getTime"],"sources":["/home/worawut_kni/Work/dsl-queue-vue-2/node_modules/date-fns/parse/_lib/parsers/ISOTimezoneParser.mjs"],"sourcesContent":["import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.mjs\";\nimport { timezonePatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseTimezonePattern } from \"../utils.mjs\";\n\n// Timezone (ISO-8601)\nexport class ISOTimezoneParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"x\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"xx\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"xxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"xxxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"xxx\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"X\"];\n}\n"],"mappings":";AAAA,SAASA,aAAa,QAAQ,4BAA4B;AAC1D,SAASC,+BAA+B,QAAQ,mDAAmD;AACnG,SAASC,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,oBAAoB,QAAQ,cAAc;;AAEnD;AACA,OAAO,MAAMC,iBAAiB,SAASF,MAAM,CAAC;EAAAG,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAAC,eAAA,mBACjC,EAAE;IAAAA,eAAA,6BAmCQ,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAAA;EAjCpCC,KAAKA,CAACC,UAAU,EAAEC,KAAK,EAAE;IACvB,QAAQA,KAAK;MACX,KAAK,GAAG;QACN,OAAOP,oBAAoB,CACzBF,gBAAgB,CAACU,oBAAoB,EACrCF,UACF,CAAC;MACH,KAAK,IAAI;QACP,OAAON,oBAAoB,CAACF,gBAAgB,CAACW,KAAK,EAAEH,UAAU,CAAC;MACjE,KAAK,MAAM;QACT,OAAON,oBAAoB,CACzBF,gBAAgB,CAACY,oBAAoB,EACrCJ,UACF,CAAC;MACH,KAAK,OAAO;QACV,OAAON,oBAAoB,CACzBF,gBAAgB,CAACa,uBAAuB,EACxCL,UACF,CAAC;MACH,KAAK,KAAK;MACV;QACE,OAAON,oBAAoB,CAACF,gBAAgB,CAACc,QAAQ,EAAEN,UAAU,CAAC;IACtE;EACF;EAEAO,GAAGA,CAACC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAE;IACtB,IAAID,KAAK,CAACE,cAAc,EAAE,OAAOH,IAAI;IACrC,OAAOlB,aAAa,CAClBkB,IAAI,EACJA,IAAI,CAACI,OAAO,CAAC,CAAC,GAAGrB,+BAA+B,CAACiB,IAAI,CAAC,GAAGE,KAC3D,CAAC;EACH;AAGF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}