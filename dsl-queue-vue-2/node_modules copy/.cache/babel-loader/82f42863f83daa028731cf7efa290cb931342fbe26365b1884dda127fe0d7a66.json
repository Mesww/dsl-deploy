{"ast":null,"code":"import _defineProperty from \"/home/worawut_kni/Work/dsl-queue-vue-2/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { isLeapYearIndex, parseNDigits, parseNumericPattern } from \"../utils.mjs\";\nexport class DayOfYearParser extends Parser {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"priority\", 90);\n    _defineProperty(this, \"subpriority\", 1);\n    _defineProperty(this, \"incompatibleTokens\", [\"Y\", \"R\", \"q\", \"Q\", \"M\", \"L\", \"w\", \"I\", \"d\", \"E\", \"i\", \"e\", \"c\", \"t\", \"T\"]);\n  }\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"D\":\n      case \"DD\":\n        return parseNumericPattern(numericPatterns.dayOfYear, dateString);\n      case \"Do\":\n        return match.ordinalNumber(dateString, {\n          unit: \"date\"\n        });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    if (isLeapYear) {\n      return value >= 1 && value <= 366;\n    } else {\n      return value >= 1 && value <= 365;\n    }\n  }\n  set(date, _flags, value) {\n    date.setMonth(0, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}","map":{"version":3,"names":["numericPatterns","Parser","isLeapYearIndex","parseNDigits","parseNumericPattern","DayOfYearParser","constructor","args","_defineProperty","parse","dateString","token","match","dayOfYear","ordinalNumber","unit","length","validate","date","value","year","getFullYear","isLeapYear","set","_flags","setMonth","setHours"],"sources":["/home/worawut_kni/Work/dsl-queue-vue-2/node_modules/date-fns/parse/_lib/parsers/DayOfYearParser.mjs"],"sourcesContent":["import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.mjs\";\n\nexport class DayOfYearParser extends Parser {\n  priority = 90;\n\n  subpriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"D\":\n      case \"DD\":\n        return parseNumericPattern(numericPatterns.dayOfYear, dateString);\n      case \"Do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    if (isLeapYear) {\n      return value >= 1 && value <= 366;\n    } else {\n      return value >= 1 && value <= 365;\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(0, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n"],"mappings":";AAAA,SAASA,eAAe,QAAQ,kBAAkB;AAClD,SAASC,MAAM,QAAQ,eAAe;AACtC,SACEC,eAAe,EACfC,YAAY,EACZC,mBAAmB,QACd,cAAc;AAErB,OAAO,MAAMC,eAAe,SAASJ,MAAM,CAAC;EAAAK,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAAC,eAAA,mBAC/B,EAAE;IAAAA,eAAA,sBAEC,CAAC;IAAAA,eAAA,6BA8BM,CACnB,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,EACH,GAAG,CACJ;EAAA;EA5CDC,KAAKA,CAACC,UAAU,EAAEC,KAAK,EAAEC,KAAK,EAAE;IAC9B,QAAQD,KAAK;MACX,KAAK,GAAG;MACR,KAAK,IAAI;QACP,OAAOP,mBAAmB,CAACJ,eAAe,CAACa,SAAS,EAAEH,UAAU,CAAC;MACnE,KAAK,IAAI;QACP,OAAOE,KAAK,CAACE,aAAa,CAACJ,UAAU,EAAE;UAAEK,IAAI,EAAE;QAAO,CAAC,CAAC;MAC1D;QACE,OAAOZ,YAAY,CAACQ,KAAK,CAACK,MAAM,EAAEN,UAAU,CAAC;IACjD;EACF;EAEAO,QAAQA,CAACC,IAAI,EAAEC,KAAK,EAAE;IACpB,MAAMC,IAAI,GAAGF,IAAI,CAACG,WAAW,CAAC,CAAC;IAC/B,MAAMC,UAAU,GAAGpB,eAAe,CAACkB,IAAI,CAAC;IACxC,IAAIE,UAAU,EAAE;MACd,OAAOH,KAAK,IAAI,CAAC,IAAIA,KAAK,IAAI,GAAG;IACnC,CAAC,MAAM;MACL,OAAOA,KAAK,IAAI,CAAC,IAAIA,KAAK,IAAI,GAAG;IACnC;EACF;EAEAI,GAAGA,CAACL,IAAI,EAAEM,MAAM,EAAEL,KAAK,EAAE;IACvBD,IAAI,CAACO,QAAQ,CAAC,CAAC,EAAEN,KAAK,CAAC;IACvBD,IAAI,CAACQ,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACzB,OAAOR,IAAI;EACb;AAmBF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}